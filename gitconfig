[user]
	name = Azat Khuzhin
	email = a3at.mail@gmail.com
[core]
	autocrlf = input
	pager = less -FRSX
	# This is not for dot_files repository.
	# Because it may contain different _generated_ configs,
	# and I don't think that it is a good idea to change indent in all configs.
	#
	# This is for repositories with source codes.
	whitespace = blank-at-eol,-blank-at-eof,tab-in-indent,tabwidth=4
[sendemail]
	smtpserver = /usr/bin/msmtp
[push]
	default = upstream
[color]
	ui = auto
[merge]
	log = true
[help]
	# $ git lgo
	# You called a Git command named 'lgo', which does not exist.
	# Continuing under the assumption that you meant 'log'
	# in 1.0 seconds automatically...
	autocorrect = 10
[alias]
	di = diff

	ci = commit
	cis = commit --signoff
	amend = commit --amend

	co = checkout
	ann = blame
	st = status

	patch = add --patch

	last = log -1
	oneline = log --oneline
	# Ahead
	changes = !sh -c 'git log --oneline `git rev-parse --symbolic-full-name --abbrev-ref @{u}`...${u}'
	# Or just use git-status
	aheadbegind = !sh -c 'curr_branch=$(git rev-parse --abbrev-ref HEAD) && curr_remote=$(git config branch.$curr_branch.remote) && curr_merge_branch=$(git config branch.$curr_branch.merge | cut -d / -f 3) && git rev-list --left-right --count $curr_branch...$curr_remote/$curr_merge_branch | tr -s \\\\t \\|'
	# Debian-like changelog
	deb-changelog = !sh -c 'git --no-pager log --format=%ai\\ %aN\\ %n%n%x09*\\ %s%d%n'

	staged = diff --cached
	both = diff HEAD

	# sha1 of the current branch's HEAD
	sha1 = !sh -c 'git rev-parse ${1-`echo HEAD`}' -
	# shows a 7 character abbreviation of a reference, defaulting to HEAD
	abbrev = !sh -c 'git rev-parse --short ${1-`echo HEAD`}' -

	amk = am --keep-non-patch
	ams = am -s
	amks = am -s --keep-non-patch

	format-one-patch = !sh -c \"git format-patch $1^...$1\"

	purr = pull --rebase
	puff = pull --ff-only

	ready = rebase -i @{u}
	ri = rebase --interactive

	push-up-to = !sh -c \"test -n '$1' -a -n '$2' && git push $1 $2:$(git rev-parse --abbrev-ref HEAD)\"

	tarball = !sh -c 'git archive --format tar.gz --prefix `basename $PWD`-`git abbrev`/ HEAD > `basename $PWD`-`git abbrev`.tgz'
[apply]
	whitespace = warn

#
# KDE projects
# Usage: git clone kde:amarok
#
[url "git://anongit.kde.org/"]
	insteadOf = kde:
[url "git@git.kde.org:"]
	pushInsteadOf = kde:

#
# Github
# Usage: git clone github:user/project
#
[url "git://github.com/"]
	insteadOf = github:
[url "git@github.com:"]
	pushInsteadOf = github:
