" All system-wide defaults are set in $VIMRUNTIME/debian.vim (usually just
" /usr/share/vim/vimcurrent/debian.vim) and sourced by the call to :runtime
" you can find below.  If you wish to change any of those settings, you should
" do it in this file (/etc/vim/vimrc), since debian.vim will be overwritten
" everytime an upgrade of the vim packages is performed.  It is recommended to
" make changes after sourcing debian.vim since it alters the value of the
" 'compatible' option.

" This line should not be removed as it ensures that various options are
" properly set to work with the Vim-related packages available in Debian.
runtime! debian.vim

set rtp+=/etc/vim/bundle/vundle/
call vundle#rc()

Bundle 'gmarik/vundle'
Bundle 'Valloric/YouCompleteMe'
let g:ycm_global_ycm_extra_conf = '/etc/vim/ycm_extra_conf.py'
Bundle 'scrooloose/syntastic'
Bundle 'kien/ctrlp.vim'
let g:ctrlp_custom_ignore = {
  \ 'dir':  '\v[\/](\.(git|hg|svn|cmake)|build)$',
  \ 'file': '\v\.(exe|so|dll|a|o|la|lo|pc|in|swp|zip|rar|tgz|gz|tar)$',
  \ }
Bundle 'szw/vim-tags'
Bundle 'vim-scripts/taglist.vim'
" http://stackoverflow.com/a/741486/328260
"
" This will look in the current directory for "tags", and work up the tree
" towards root until one is found. IOW, you can be anywhere in your source
" tree instead of just the root of it.
set tags=tags;/
Bundle 'ciaranm/detectindent'
let g:detectindent_preferred_expandtab=1
let g:detectindent_preferred_indent=4
let g:detectindent_max_lines_to_analyse=1024
" let g:detectindent_verbosity=0
autocmd BufReadPost * :DetectIndent
let g:is_bash=1
" http://vimcasts.org/episodes/aligning-text-with-tabular-vim/
Bundle 'godlygeek/tabular'
Bundle 'vim-lldb'
Bundle 'tpope/vim-surround'

syntax on

" Uncomment the following to have Vim jump to the last position when
" reopening a file
"if has("autocmd")
"  au BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g'\"" | endif
"endif

" Uncomment the following to have Vim load indentation rules and plugins
" according to the detected filetype.
"if has("autocmd")
"  filetype plugin indent on
"endif

" The following are commented out as they cause vim to behave a lot
" differently from regular Vi. They are highly recommended though.
"set showcmd		" Show (partial) command in status line.
"set showmatch		" Show matching brackets.
"set ignorecase		" Do case insensitive matching
"set smartcase		" Do smart case matching
"set incsearch		" Incremental search
"set autowrite		" Automatically save before commands like :next and :make
set hidden             " Hide buffers when they are abandoned
set mouse=a		" Enable mouse usage (all modes)

if !has('gui_running')
	set mouse=
endif

" Source a global configuration file if available
if filereadable("/etc/vim/vimrc.local")
	source /etc/vim/vimrc.local
endif

if &term =~ '^screen'
    " tmux will send xterm-style keys when its xterm-keys option is on
    execute "set <xUp>=\e[1;*A"
    execute "set <xDown>=\e[1;*B"
    execute "set <xRight>=\e[1;*C"
    execute "set <xLeft>=\e[1;*D"
endif

" Terminal codepage, must equal to that codepage used for output to terminal
set termencoding=utf-8
" Possible codepages of input files 
set fileencodings=utf8,cp1251
set encoding=utf8

" Show line numbers
set nu

" Do not unload buffer, when switching for another
" This allow us edit multiple files at the same time, without saving every
" time, when switcing between them
set hidden

set autoindent
set smartindent

nmap <F1> :setlocal spell!<cr>
imap <F1> <C-\><C-O>:setlocal spell!<cr>

" F2 -  fast save
nmap <F2> :w<cr>
vmap <F2> <esc>:w<cr>i
imap <F2> <esc>:w<cr>i

" F3 - show errors
nmap <F3> :copen<cr>
vmap <F3> <esc>:copen<cr>
imap <F3> <esc>:copen<cr>

" F5 - buffer list
nmap <F5> <Esc>:BufExplorer<cr>
vmap <F5> <esc>:BufExplorer<cr>
imap <F5> <esc><esc>:BufExplorer<cr>

" F6 - previous buffer
map <F6> :bp<cr>
vmap <F6> <esc>:bp<cr>i
imap <F6> <esc>:bp<cr>i

" F7 - next buffer 
map <F7> :bn<cr>
vmap <F7> <esc>:bn<cr>i
imap <F7> <esc>:bn<cr>i

" F8 - bookmarks list
map <F8> :MarksBrowser<cr>
vmap <F8> <esc>:MarksBrowser<cr>
imap <F8> <esc>:MarksBrowser<cr>

" F9 - "make" command
map <F9> :make<cr>
vmap <F9> <esc>:make<cr>i
imap <F9> <esc>:make<cr>i

" F10 - delete buffer
map <F10> :bd<cr>
vmap <F10> <esc>:bd<cr>
imap <F10> <esc>:bd<cr>

" F11 - show Taglist
map <F11> :TlistToggle<cr>
vmap <F11> <esc>:TlistToggle<cr>
imap <F11> <esc>:TlistToggle<cr>

" F12 - show explorer
map <F12> :Ex<cr>
vmap <F12> <esc>:Ex<cr>i
imap <F12> <esc>:Ex<cr>i

" < & > - indent
vmap < <gv
vmap > >gv

" Select codepage (koi8-r, cp1251, cp866, utf8)
set wildmenu
set wcm=<Tab> 
menu Encoding.koi8-r :e ++enc=koi8-r<CR>
menu Encoding.windows-1251 :e ++enc=cp1251<CR>
menu Encoding.cp866 :e ++enc=cp866<CR>
menu Encoding.utf-8 :e ++enc=utf8 <CR>

" Turn on filetype plugin
filetype plugin on
au BufRead,BufNewFile *.phps    set filetype=php
au BufRead,BufNewFile *.thtml    set filetype=php

" Colorscheme
colorscheme desert

" No auto-wrap
set tw=0

" http://stackoverflow.com/a/2559262/328260
set hlsearch " highlight search
set incsearch " search while typing
set fileformat=unix

"====[ Make the 81st column stand out ]====================
highlight ColorColumn ctermbg=magenta
call matchadd('ColorColumn', '\%81v', 100)

"====[ Make tabs, trailing whitespace, and non-breaking spaces visible ]======
exec "set listchars=tab:\uBB\uBB,trail:\uB7,nbsp:~"
set list

"====[ Open any file with a pre-existing swapfile in readonly mode "]=========
augroup NoSimultaneousEdits
    autocmd!
    autocmd SwapExists * let v:swapchoice = 'o'
	" TODO: need to fix error/warning
    autocmd SwapExists * echoerr 'Duplicate edit session (readonly)'
augroup END

" no backup needed
set nobackup
set nowb
set noswapfile

" Cursor
set cursorline
set cursorcolumn

" Abbrevs
iabbrev _email a3at.mail@gmail.com
iabbrev _me Azat Khuzhin
iabbrev _rb Reviewed-by: Azat Khuzhin <a3at.mail@gmail.com>
iabbrev _soff Signed-off-by: Azat Khuzhin <a3at.mail@gmail.com>
iabbrev _pb Reported-by:
iabbrev _tb Tested-by:

" C Abbrevs
cabbrev non set nonumber
cabbrev n set number
cabbrev c set cursorline <BAR> set cursorcolumn
cabbrev noc set cursorline! <BAR> set cursorcolumn!
cabbrev tab setl noexpandtab <BAR> setl shiftwidth=4 <BAR> setl tabstop=4 <BAR> setl softtabstop=4
cabbrev space setl expandtab <BAR> setl shiftwidth=4 <BAR> setl tabstop=4 <BAR> setl softtabstop=4

" Fold
autocmd FileType c setlocal foldmethod=syntax
autocmd FileType cpp setlocal foldmethod=syntax
autocmd FileType h setlocal foldmethod=syntax
set foldenable!
set foldlevel=1000 " don't auto folding, since za set foldenable
hi Folded ctermbg=5 " color scheme dark reset can't handle folded info

" Status line
" https://groups.google.com/forum/#!topic/vim_use/wPnsi-40FhE
set laststatus=2
set statusline=
set statusline +=%1*\ %n\ %*            "buffer number
set statusline +=%5*%{&ff}%*            "file format
set statusline +=%3*%y%*                "file type
set statusline +=%4*\ %<%F%*            "full path
set statusline +=%2*%m%*                "modified flag
set statusline +=%1*%=%5l%*             "current line
set statusline +=%2*/%L%*               "total lines
set statusline +=%1*%4c\ %*             "column number
set statusline +=%2*0x%04B\ %*          "character under cursor

" mapping window moving
map <C-j> <C-W>j
map <C-k> <C-W>k
map <C-h> <C-W>h
map <C-l> <C-W>l

" tab operations
map <leader>t :tabnew<cr>
map <C-left> :tabprev<cr>
map <C-right> :tabnext<cr>

" Quick key sets using <leader> key
nmap <leader>w :w!<cr>
nmap <leader>q :q<cr>
nmap <leader>e :e ~/.vimrc<cr>
set pastetoggle=<leader>p

nnoremap <C-a> <nop>
nnoremap <C-x> <nop>

set langmap=ФИСВУАПРШОЛДЬТЩЗЙКЫЕГМЦЧНЯЖ;ABCDEFGHIJKLMNOPQRSTUVWXYZ:,фисвуапршолдьтщзйкыегмцчня;abcdefghijklmnopqrstuvwxyz
