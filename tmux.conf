# osx
if-shell "command -v reattach-to-user-namespace" \
  "set-option -g default-command 'reattach-to-user-namespace -l bash'"

# ------------- [ screen like ]
set-option -g prefix C-a
unbind C-b
bind C-a last-window
bind a send-prefix

# ------------- [ lock ]
# Bind appropriate commands similar to screen.
if-shell "command -v vlock" \
  "set-option -g lock-command vlock"
bind C-X locks
bind x locks

# ------------- [ displays * ]
unbind *
bind * list-clients

# ------------- [ common ]
set-window-option -g mode-keys vi # vi key
set-option -g status-keys vi
set-w -g xterm-keys on
if-shell "test $(uname --operating-system) != FreeBSD" \
  "set-option -g default-terminal 'xterm-256color'"
# if uncomment next line: window title is not changed
#set-option -g terminal-overrides 'xterm*:smcup@:rmcup@'
set-window-option -g alternate-screen off
bind c new-window -c "#{pane_current_path}"

# ------------- [ buffer ]
set-option -g history-limit 10000
set-option -g buffer-limit 100

# move buffer tmux to X buffer
# https://github.com/ChrisJohnsen/tmux-MacOSX-pasteboard
if-shell "command -v reattach-to-user-namespace" \
  'bind-key C-y save-buffer /tmp/tmux-buffer \; run-shell "cat /tmp/tmux-buffer | reattach-to-user-namespace pbcopy && rm /tmp/tmux-buffer" \; display "Copied to clipboard"'
if-shell "command -v xclip" \
  'bind-key C-y save-buffer /tmp/tmux-buffer \; run-shell "cat /tmp/tmux-buffer | xclip && rm /tmp/tmux-buffer" \; display "Copied to clipboard"'
if-shell "command -v xsel" \
  'bind-key C-y save-buffer /tmp/tmux-buffer \; run-shell "cat /tmp/tmux-buffer | xsel -i && rm /tmp/tmux-buffer" \; display "Copied to clipboard"'

# http://stackoverflow.com/questions/11042920/how-to-copy-and-paste-between-different-tmux-panes-running-vim-instances
# copy
bind [ copy-mode # default
bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi y send -X copy-selection
bind -T copy-mode-vi V send -X rectangle-toggle
bind ] paste-buffer # default
# buffer
bind Space choose-buffer
unbind l
bind-key l clear-history

# ------------- [ split for panels and moving ]
unbind %
bind + split-window -h -c "#{pane_current_path}" # horizontal split
unbind '"'
bind _ split-window -v -c "#{pane_current_path}" # vertical split
bind C-j previous-window
bind C-k next-window

# ------------- [ title ]
set-option -g set-titles on
set-option -g set-titles-string '[tmux #S:#I #P #W]' # window number,program name,active (or not)
set-window-option -g automatic-rename on # auto name

# ------------- [ turn off visual activity ]
set-option -g visual-activity off
set-option -g visual-bell off

# ------------- [ status panel ]
set-option -g status-justify left
# If running inside tmux ($TMUX is set), then change the status line to red
%if #{TMUX}
  set-option -g status-bg red
%else
  set-option -g status-bg black
%endif
set-option -g status-fg cyan
set-option -g status-interval 5
set-option -g status-left-length 30
set-option -g status-left ''
set-option -g status-right-length 80

# status-right
if-shell "test -d /sys/class/power_supply/BAT0 && command -v upower" \
  "set-option -g status-right '| #[fg=blue,bold]#(upower -i /org/freedesktop/UPower/devices/battery_BAT0 | fgrep -q low && echo \"#[fg=red]\")#(upower -i /org/freedesktop/UPower/devices/battery_BAT0 | awk \"/percentage/{print \\\$NF}\") #[fg=cyan]| avg: #(cat /proc/loadavg | cut -d\" \" -f-4) #[fg=cyan]| #[fg=blue,bold]###S #[fg=cyan]#[default]'" \
  "set-option -g status-right '| #[fg=blue,bold]#h #[fg=cyan]| avg: #(cat /proc/loadavg | cut -d\" \" -f-4) #[fg=cyan]| #[fg=blue,bold]###S #[fg=cyan]| #[fg=magenta]%R %b-%d %a#[default]'"
if-shell "test -d /dev/shm/mcabber && test -d /sys/class/power_supply/BAT0 && command -v upower" \
  "set-option -g status-right '#(wc -l /dev/shm/mcabber/*.state >/dev/null 2>&1 && /bin/echo -e \"#[fg=magenta]|\\xE2\\x9C\\x89 \")| #[fg=blue,bold]#(upower -i /org/freedesktop/UPower/devices/battery_BAT0 | fgrep -q low && echo \"#[fg=red]\")#(upower -i /org/freedesktop/UPower/devices/battery_BAT0 | awk \"/percentage/{print \\\$NF}\") #[fg=cyan]| avg: #(cat /proc/loadavg | cut -d\" \" -f-4) #[fg=cyan]| #[fg=blue,bold]###S #[fg=cyan]#[default]'" \


set-option -g visual-activity on
set-window-option -g monitor-activity on
set-window-option -g window-status-current-fg white

# ------------- [ watches ]
set-window-option -g clock-mode-colour cyan
set-window-option -g clock-mode-style 24

# ------------- [ stuff ]
# `+r reloads the configuration, handy
bind r source-file ~/.tmux.conf \; display "User configuration Reloaded!"
bind R source-file /etc/tmux.conf \; display "Configuration Reloaded!"

# ------------- [ stuff ]

# Rather than constraining window size to the maximum size of any client 
# connected to the *session*, constrain window size to the maximum size of any 
# client connected to *that window*. Much more reasonable.
set-window-option -g aggressive-resize on
